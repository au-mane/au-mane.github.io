import{w as s}from"./index.ojC-3hDC.js";import{s as n}from"./supabase-config.Y8iSvhNi.js";import{A}from"./scheduler.BpDDpqAO.js";const f=s([]);let l=!1;async function u(){if(l)return A(f);l=!0;const{data:t,error:e}=await n.from("accounts").select("*").order("name",{ascending:!0});if(e)throw e;const a=t||[];return f.set(a),l=!1,a}async function w(t){const{data:e,error:a}=await n.from("accounts").insert([t]).select();if(a)throw a;return await u(),e?e[0]:void 0}async function y(t,e){const{data:a,error:i}=await n.from("accounts").update(e).eq("id",t).select();if(i)throw i;return await u(),a?a[0]:void 0}async function h(t){const{error:e}=await n.from("accounts").delete().eq("id",t);if(e)throw e;await u()}let o=null;const p=()=>{const t=s(!1),e=s([]),a=s();return o={stores:{loading:t,targetAccount:a,data:e},actions:{reload:async()=>{t.set(!0);const c=await u();e.set(c),t.set(!1)},createAccount:async c=>{t.set(!0);try{await w(c)}catch(r){console.error(r)}finally{t.set(!1)}},updateAccount:async(c,r)=>{t.set(!0);try{await y(c,r)}catch(d){console.error(d)}finally{t.set(!1)}},deleteAccount:async c=>{t.set(!0);try{await h(c)}catch(r){console.error(r)}finally{t.set(!1)}}}},o},D=()=>o?.stores&&Object.keys(o.stores).length>0&&o?.actions&&Object.keys(o.actions).length>0?o:p();export{D as g};
