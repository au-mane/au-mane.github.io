import{w as r}from"./index.CRsH-7pe.js";import{s as n}from"./supabase-config.Y8iSvhNi.js";import{A}from"./scheduler.Ban6yQD2.js";const f=r([]);let l=!1;async function u(){if(l)return A(f);l=!0;const{data:t,error:e}=await n.from("accounts").select("*").order("name",{ascending:!0});if(e)throw e;const c=t||[];return f.set(c),l=!1,c}async function w(t){const{data:e,error:c}=await n.from("accounts").insert([t]).select();if(c)throw c;return await u(),e?e[0]:void 0}async function y(t,e){const{data:c,error:i}=await n.from("accounts").update(e).eq("id",t).select();if(i)throw i;return await u(),c?c[0]:void 0}async function h(t){const{error:e}=await n.from("accounts").delete().eq("id",t);if(e)throw e;await u()}let a=null;const p=()=>{const t=r(!1),e=r([]),c=r();return a={stores:{loading:t,targetAccount:c,data:e},actions:{reload:async()=>{t.set(!0);const o=await u();e.set(o),t.set(!1)},createAccount:async o=>{t.set(!0);try{await w(o)}catch(s){console.error(s)}finally{t.set(!1)}},updateAccount:async(o,s)=>{t.set(!0);try{await y(o,s)}catch(d){console.error(d)}finally{t.set(!1)}},deleteAccount:async o=>{t.set(!0);try{await h(o)}catch(s){console.error(s)}finally{t.set(!1)}}}},a},D=()=>a?.stores&&Object.keys(a.stores).length>0&&a?.actions&&Object.keys(a.actions).length>0?a:p(),S=()=>{a=null};export{S as d,D as g};
